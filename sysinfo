#!/bin/bash

VERSION=0.1
YES=yes
DEBUG=0
BATTERY=
PLATFORM=

function get_platform {
	[[ -n $PLATFORM ]] || PLATFORM=$(uname)
	echo $PLATFORM
}

function print_help {
	echo "Usage: sysinfo [options]"
	echo
	echo "Options:"
	echo "   -b, --battery        Display battery information."
	echo "   -g, --debug          Debug mode."
	echo "   -h, --help           Print this help message."
}

function error {

	local msg=$1

	echo "ERROR: $msg" >&2

	exit 1
}


function debug {

	local lvl=$1
	local msg=$2

	[[ $DEBUG -ge $lvl ]] && echo "[DEBUG] $msg" >&2
}

function read_args {

	local args="$*" # save arguments for debugging purpose
	local print=

	while true ; do
		case $1 in
			-b|--battery)   print=$YES ; BATTERY=$YES ;;
			-g|--debug)     DEBUG=$((DEBUG + 1)) ;;
			-h|--help)      print_help ; exit 0 ;;
			-)              error "Illegal option $1." ;;
			--)             error "Illegal option $1." ;;
			--*)            error "Illegal option $1." ;;
			-?)             error "Unknown option $1." ;;
			-[^-]*)         split_opt=$(echo $1 | sed 's/^-//' | sed 's/\([a-zA-Z]\)/ -\1/g') ; set -- $1$split_opt "${@:2}" ;;
			*) break
		esac
		shift
	done

	[[ -z $print ]] && BATTERY=$YES

	[[ -z "$*" ]] || error "Forbidden remaining arguments: $*."

	# Debug
	debug 1 "Arguments are : $args"
}

function print_battery {
	if [[ $(get_platform) == Darwin ]] ; then
		charge=$(pmset -g batt | grep InternalBattery | sed -E 's/^.*[[:space:]]([[:digit:]]+%).*$/\1/')
		plugged=$(pmset -g batt | grep InternalBattery | sed -E -e 's/^.*InternalBattery[^;]*; *([^;]*) *;.*$/\1/' -e 's/discharging/v/' -e 's/charging|AC attached/^/' -e 's/charged//')
	elif [[ $(get_platform) == Linux ]] && which acpi >/dev/null 2>/dev/null ; then
		charge=$(acpi -b | sed 's/^.* \([0-9]\+%\).*$/\1/')
		plugged=$(acpi -a | sed -e 's/^.* \(on\|off\)-line$/\1/' -e 's/on/^/' -e 's/off/v/')
	else
		debug 1 "Do not know how to get battery information for platform $(get_platform)."
	fi
	echo "$charge$plugged"
}

# Main

read_args "$@"

[[ $BATTERY == $YES ]] && print_battery
